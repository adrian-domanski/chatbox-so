{"version":3,"sources":["store/actions/errorActions.js","store/actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/NavBar.js","components/ChatBox.js","components/Info.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/errorReducer.js","store/reducers/rootReducer.js","index.js"],"names":["returnError","status","msg","id","dispatch","type","payload","getConfig","config","headers","localStorage","getItem","token","RegisterModal","state","modal","error","name","email","password","class","toggle","setState","prevState","handleChange","e","target","value","handleSubmit","preventDefault","props","register","prevProps","this","clearErrors","setTimeout","title","onClick","Modal","isOpen","className","ModalHeader","ModalBody","Alert","color","Form","FormGroup","htmlFor","Input","onChange","ModalFooter","Button","Component","connect","errorReducer","user","axios","post","then","res","data","catch","err","response","LoginModal","login","credentials","NavBar","guestLinks","Fragment","NavItem","NavLink","href","authLinks","logout","isAuthenticated","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","authReducer","isLoading","socket","openSocket","ChatBox","newMessage","messages","events","typingTimer","errorMsg","name_color","rank","length","emit","author","author_color","author_rank","handleKeyPress","which","clearTimeout","scrollToBottom","chat","scrollTop","scrollHeight","on","arr","reversed_arr","i","event","find","console","log","typeEvent","index","indexOf","splice","msgList","map","key","_id","style","moment","date","format","eventsList","Label","for","ref","el","placeholder","onKeyPress","Info","user_count","spamers","users","Math","floor","top","spamer","pos","msg_count","Card","CardHeader","tag","CardBody","CardTitle","CardFooter","App","auth","get","Boolean","window","location","hostname","match","initState","action","setItem","removeItem","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f79395c5.chunk.js","sourcesContent":["export const returnError = (status, msg, id = null) => dispatch => {\r\n  dispatch({\r\n    type: \"RETURN_ERROR\",\r\n    payload: {\r\n      status,\r\n      msg,\r\n      id\r\n    }\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport { returnError } from \"./errorActions\";\r\n\r\n// Register action\r\n\r\nexport const register = user => dispatch => {\r\n  dispatch({ type: \"LOADING\" });\r\n  axios\r\n    .post(\"/api/register\", user, getConfig())\r\n    .then(res => {\r\n      dispatch({ type: \"REGISTER_SUCCESS\", payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      dispatch(\r\n        returnError(err.response.status, err.response.data.msg, \"REGISTER_FAIL\")\r\n      );\r\n      dispatch({ type: \"REGISTER_FAIL\" });\r\n    });\r\n};\r\n\r\n// Login action\r\n\r\nexport const login = credentials => dispatch => {\r\n  dispatch({ type: \"LOADING\" });\r\n  axios\r\n    .post(\"/api/login\", credentials, getConfig())\r\n    .then(res => {\r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      dispatch(\r\n        returnError(err.response.status, err.response.data.msg, \"LOGIN_FAIL\")\r\n      );\r\n      dispatch({ type: \"LOGIN_FAIL\" });\r\n    });\r\n};\r\n\r\n// Logout action\r\n\r\nexport const logout = () => ({\r\n  type: \"LOGOUT_SUCCESS\"\r\n});\r\n\r\n// Auth user based on JWT token\r\nexport const auth = () => dispatch => {\r\n  dispatch({ type: \"LOADING\" });\r\n  axios\r\n    .get(\"/api/auth\", getConfig())\r\n    .then(res => {\r\n      dispatch({ type: \"USER_LOADED\", payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      dispatch(returnError(err.response.status, err.response.data.msg));\r\n      dispatch({ type: \"AUTH_FAIL\" });\r\n    });\r\n};\r\n\r\nconst getConfig = () => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  if (localStorage.getItem(\"token\")) {\r\n    const token = localStorage.getItem(\"token\");\r\n    config.headers[\"x-auth-token\"] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Form,\r\n  FormGroup,\r\n  Alert\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../../store/actions/authActions\";\r\n\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    error: null,\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    class: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.error.id !== prevProps.error.id &&\r\n      this.props.error.id === \"REGISTER_FAIL\"\r\n    ) {\r\n      this.setState({ error: this.props.error.msg });\r\n      this.props.clearErrors();\r\n\r\n      setTimeout(() => {\r\n        this.setState({ error: null });\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Attempt to register new user\r\n    const { name, email, password } = this.state;\r\n    this.props.register({ name, email, password });\r\n  };\r\n\r\n  render() {\r\n    const { title } = this.props;\r\n    const { name, email, password, error } = this.state;\r\n    return (\r\n      <div>\r\n        <div onClick={this.toggle}>{title}</div>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Registration Form</ModalHeader>\r\n          <ModalBody>\r\n            {error ? <Alert color=\"danger\">{error}</Alert> : null}\r\n            <Form>\r\n              {/* Name */}\r\n              <FormGroup>\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  onChange={this.handleChange}\r\n                  value={name}\r\n                  name=\"name\"></Input>\r\n              </FormGroup>\r\n              {/* Email */}\r\n              <FormGroup>\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  onChange={this.handleChange}\r\n                  value={email}\r\n                  name=\"email\"></Input>\r\n              </FormGroup>\r\n              {/* Password */}\r\n              <FormGroup>\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                  value={password}\r\n                  name=\"password\"></Input>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"success\" onClick={this.handleSubmit}>\r\n              Register\r\n            </Button>{\" \"}\r\n            <Button color=\"danger\" onClick={this.toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.errorReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  register: user => dispatch(register(user)),\r\n  clearErrors: () => dispatch({ type: \"CLEAR_ERRORS\" })\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegisterModal);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Form,\r\n  FormGroup,\r\n  Alert\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../store/actions/authActions\";\r\n\r\nclass LoginModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    error: null,\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.error.id !== prevProps.error.id &&\r\n      this.props.error.id === \"LOGIN_FAIL\"\r\n    ) {\r\n      this.setState({ error: this.props.error.msg });\r\n      this.props.clearErrors();\r\n\r\n      setTimeout(() => {\r\n        this.setState({ error: null });\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Attempt to login new user\r\n    const { email, password } = this.state;\r\n    this.props.login({ email, password });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n    const { title } = this.props;\r\n    return (\r\n      <div>\r\n        <div onClick={this.toggle}>{title}</div>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Login Form</ModalHeader>\r\n          <ModalBody>\r\n            {error ? <Alert color=\"danger\">{error}</Alert> : null}\r\n            <Form>\r\n              {/* Email */}\r\n              <FormGroup>\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  onChange={this.handleChange}\r\n                  value={email}\r\n                  name=\"email\"></Input>\r\n              </FormGroup>\r\n              {/* Password */}\r\n              <FormGroup>\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                  value={password}\r\n                  name=\"password\"></Input>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"success\" onClick={this.handleSubmit}>\r\n              Log in\r\n            </Button>{\" \"}\r\n            <Button color=\"danger\" onClick={this.toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.errorReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: user => dispatch(login(user)),\r\n  clearErrors: () => dispatch({ type: \"CLEAR_ERRORS\" })\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginModal);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../store/actions/authActions\";\r\nimport RegisterModal from \"./auth/RegisterModal\";\r\nimport LoginModal from \"./auth/LoginModal\";\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n  render() {\r\n    const guestLinks = (\r\n      <React.Fragment>\r\n        <NavItem>\r\n          <NavLink href=\"#\">\r\n            <RegisterModal title=\"Register\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink href=\"#\">\r\n            <LoginModal title=\"Log In\" />\r\n          </NavLink>\r\n        </NavItem>\r\n      </React.Fragment>\r\n    );\r\n\r\n    const authLinks = (\r\n      <React.Fragment>\r\n        <NavItem>\r\n          <NavLink href=\"#\" onClick={() => this.props.logout()}>\r\n            Logout{\" \"}\r\n            <strong>\r\n              ({this.props.isAuthenticated && this.props.user.name})\r\n            </strong>\r\n          </NavLink>\r\n        </NavItem>\r\n      </React.Fragment>\r\n    );\r\n\r\n    const { isAuthenticated } = this.props;\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand href=\"/\">ChatBox</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              {isAuthenticated ? authLinks : guestLinks}\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.authReducer.isAuthenticated,\r\n  user: state.authReducer.user,\r\n  isLoading: state.authReducer.isLoading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logout: () => dispatch(logout())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavBar);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Label, FormGroup, Button, Alert } from \"reactstrap\";\r\nimport \"../styles/ChatBox.css\";\r\nimport openSocket from \"socket.io-client\";\r\nimport { connect } from \"react-redux\";\r\nimport RegisterModal from \"./auth/RegisterModal\";\r\nimport LoginModal from \"./auth/LoginModal\";\r\nimport moment from \"moment\";\r\n\r\nconst socket = openSocket(\"/\");\r\n\r\nclass ChatBox extends Component {\r\n  state = {\r\n    newMessage: \"\",\r\n    messages: [],\r\n    events: [],\r\n    typingTimer: null,\r\n    errorMsg: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { events } = this.state;\r\n\r\n    // Get messages from db\r\n    socket.on(\"output\", data => {\r\n      // Reverse array order\r\n      let arr = data;\r\n      let reversed_arr = [];\r\n      for (let i = arr.length; i > 0; i--) {\r\n        reversed_arr = [...reversed_arr, arr[i - 1]];\r\n      }\r\n      this.setState({\r\n        messages: reversed_arr\r\n      });\r\n      this.scrollToBottom();\r\n    });\r\n\r\n    // Refresh - new messages\r\n    socket.on(\"refresh\", data => {\r\n      this.setState({ messages: [...this.state.messages, data] });\r\n      this.scrollToBottom();\r\n    });\r\n\r\n    // Typing event\r\n    socket.on(\"typing\", name => {\r\n      const event = {\r\n        type: \"TYPING\",\r\n        author: name,\r\n        msg: `${name} is typing a message...`\r\n      };\r\n      const currEvent = events.find(\r\n        e => e.type === \"TYPING\" && e.author === name\r\n      );\r\n      if (!currEvent) {\r\n        this.setState({ events: [...events, event] });\r\n        this.scrollToBottom();\r\n      }\r\n    });\r\n\r\n    // Clear typing event\r\n    socket.on(\"stopTyping\", name => {\r\n      console.log(\"clear\");\r\n      const typeEvent = events.find(\r\n        e => e.type === \"TYPING\" && e.author === name\r\n      );\r\n\r\n      // Delete event\r\n      const index = events.indexOf(typeEvent);\r\n      const arr = events.splice(index, 1);\r\n      this.setState({ events: arr });\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, name_color, rank } = this.props.user;\r\n    const { newMessage } = this.state;\r\n\r\n    if (newMessage.length < 255) {\r\n      // Clear Typing event\r\n      socket.emit(\"stopTyping\", this.props.user.name);\r\n\r\n      // Emit new message\r\n      socket.emit(\"input\", {\r\n        msg: newMessage,\r\n        author: name,\r\n        author_color: name_color,\r\n        author_rank: rank\r\n      });\r\n\r\n      // Clear input field\r\n      this.setState({ newMessage: \"\" });\r\n    } else {\r\n      this.setState({ errorMsg: \"Message might have at most 255 characters\" });\r\n\r\n      // Clear error after 5sec\r\n      setTimeout(() => {\r\n        this.setState({ errorMsg: \"\" });\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    const { name } = this.props.user;\r\n    const { typingTimer } = this.state;\r\n\r\n    // Submit after enter\r\n    if (e.which === 13) return this.handleSubmit(e);\r\n\r\n    // Emit typing\r\n    socket.emit(\"typing\", name);\r\n\r\n    // Emit stop typing after 5s break - clear event\r\n    clearTimeout(typingTimer);\r\n    this.setState({\r\n      typingTimer: setTimeout(() => {\r\n        socket.emit(\"stopTyping\", name);\r\n      }, 5000)\r\n    });\r\n  };\r\n\r\n  // Scroll chatbox to bottom\r\n  scrollToBottom = () => {\r\n    this.chat.scrollTop = this.chat.scrollHeight;\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.props;\r\n    const { newMessage, messages, events, errorMsg } = this.state;\r\n    const msgList = messages.length\r\n      ? messages.map(msg => (\r\n          <div className=\"msg__wrapper\" key={msg._id}>\r\n            <span style={{ color: msg.author_color }} className=\"rank\">\r\n              {msg.author_rank}\r\n            </span>\r\n            <div className=\"message\">\r\n              <strong style={{ color: msg.author_color }}>\r\n                {msg.author}:{\" \"}\r\n              </strong>\r\n              <span>{msg.msg}</span>\r\n            </div>\r\n            <div className=\"date\">\r\n              {moment(msg.date).format(\"HH:mm\")}&nbsp;|&nbsp;\r\n              {moment(msg.date).format(\"DD-MM-YYYY\")}\r\n            </div>\r\n          </div>\r\n        ))\r\n      : \"There aren't any messages yet - let's change that!\";\r\n    const eventsList = events.length\r\n      ? events.map((event, id) => (\r\n          <div className=\"text-muted\" key={id}>\r\n            {event.msg}\r\n          </div>\r\n        ))\r\n      : \"\";\r\n    return (\r\n      <div className=\"chatbox\">\r\n        <Label for=\"messages\">Chat:</Label>\r\n        <div className=\"messages\" ref={el => (this.chat = el)} id=\"messages\">\r\n          {msgList}\r\n          {eventsList}\r\n        </div>\r\n        {isAuthenticated ? (\r\n          <FormGroup className=\"new_message_form\">\r\n            <Label for=\"newMessage\">New message:</Label>\r\n            <Input\r\n              placeholder=\"Say Hello...\"\r\n              type=\"textarea\"\r\n              onChange={this.handleChange}\r\n              name=\"newMessage\"\r\n              id=\"newMessage\"\r\n              value={newMessage}\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n            {errorMsg !== \"\" ? (\r\n              <Alert color=\"danger\" className=\"my-3\">\r\n                {errorMsg}\r\n              </Alert>\r\n            ) : null}\r\n            <Button color=\"success px-5\" onClick={this.handleSubmit}>\r\n              Send\r\n            </Button>\r\n          </FormGroup>\r\n        ) : (\r\n          <h3 className=\"text-center mt-5 tip\">\r\n            Please&nbsp;\r\n            <a href=\"/\" onClick={e => e.preventDefault()}>\r\n              <RegisterModal title=\"register\" />\r\n            </a>\r\n            &nbsp;or&nbsp;\r\n            <a href=\"/\" onClick={e => e.preventDefault()}>\r\n              <LoginModal title=\"log in\" />\r\n            </a>\r\n            &nbsp;to add new message\r\n          </h3>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.authReducer.isAuthenticated,\r\n  user: state.authReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChatBox);\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardHeader, CardFooter, CardBody, CardTitle } from \"reactstrap\";\r\nimport openSocket from \"socket.io-client\";\r\nconst socket = openSocket(\"/\");\r\n\r\nclass Info extends Component {\r\n  state = {\r\n    user_count: 0,\r\n    spamers: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Catch active users emit\r\n    socket.on(\"active\", data => {\r\n      const users = Math.floor(data / 2);\r\n      this.setState({ user_count: users });\r\n    });\r\n\r\n    // Catch spamers emit\r\n    socket.on(\"spamers\", users => {\r\n      this.setState({ spamers: users });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { user_count, spamers } = this.state;\r\n    const top = spamers.length\r\n      ? spamers.map((spamer, pos) => (\r\n          <li key={spamer._id}>\r\n            {pos + 1}. {spamer.name} ({spamer.msg_count})\r\n          </li>\r\n        ))\r\n      : \"Loading...\";\r\n\r\n    return (\r\n      <Card className=\"info\">\r\n        <CardHeader tag=\"h3\" className=\"text-center\">\r\n          Info:\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CardTitle className=\"text-center\">\r\n            <strong>Active users</strong>:{\" \"}\r\n            <span className=\"text-success\">{user_count}</span>\r\n          </CardTitle>\r\n          <CardTitle className=\"text-center\">\r\n            <strong>Spamers: </strong>\r\n          </CardTitle>\r\n          <ul className=\"text-center spamers\">{top}</ul>\r\n        </CardBody>\r\n        <CardFooter className=\"text-muted text-center copy\">\r\n          Copyright &copy; Adison\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { auth } from \"./store/actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport ChatBox from \"./components/ChatBox\";\r\nimport RegisterModal from \"./components/auth/RegisterModal\";\r\nimport Info from \"./components/Info\";\r\n\r\nexport class App extends Component {\r\n  componentDidMount() {\r\n    if (!this.props.isAuthenticated) {\r\n      this.props.auth();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <NavBar></NavBar>\r\n        <div className=\"py-5 content\">\r\n          <ChatBox />\r\n          <Info />\r\n        </div>\r\n        <RegisterModal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.authReducer.isAuthenticated\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  auth: () => dispatch(auth())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  token: localStorage.getItem(\"token\"),\r\n  isLoading: true\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"USER_LOADING\":\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case \"USER_LOADED\": {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n        token: localStorage.getItem(\"token\"),\r\n        isLoading: false\r\n      };\r\n    }\r\n    case \"LOGIN_SUCCESS\":\r\n    case \"REGISTER_SUCCESS\":\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: localStorage.getItem(\"token\"),\r\n        isLoading: false\r\n      };\r\n    case \"LOGIN_FAIL\":\r\n    case \"AUTH_FAIL\":\r\n    case \"LOGOUT_SUCCESS\":\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        isLoading: false\r\n      };\r\n    case \"LOADING\":\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  msg: null,\r\n  status: null,\r\n  id: null\r\n};\r\n\r\nconst errorReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"RETURN_ERROR\":\r\n      const { msg, status, id } = action.payload;\r\n      return {\r\n        ...state,\r\n        msg,\r\n        status,\r\n        id\r\n      };\r\n    case \"CLEAR_ERRORS\":\r\n      return {\r\n        msg: null,\r\n        status: null,\r\n        id: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default errorReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authReducer,\r\n  errorReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport \"./styles/Media.css\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk)\r\n    // DEV Reduxx\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}